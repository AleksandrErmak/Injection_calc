Sub ingection_by_date(ByVal WSI As Worksheet, ByVal WSC As Worksheet, ByVal WSO As Worksheet, ByVal WSS As Worksheet, ByVal WSCS As Worksheet, ByVal well As Integer, ByRef DynArrayDate(), ByRef DynArraySource(), ByVal rangeToSearchDatAndSourceCon, ByVal rangeToSearchDatAndObjCon, ByVal rangeToSearchObject)
    rowcluster = rangeToSearchDatAndObjCon.Find(WSI.Cells(well, 2).Value, , xlValues, xlWhole, xlByColumns).Row 'найти куст на листе привязки кустов
    rowobject_1 = rangeToSearchObject.Find(WSC.Cells(rowcluster, 2).Value, , xlValues, xlWhole, xlByColumns).Row 'найти первый объъеккт к которому привязывается куст
    rowobject_2 = rangeToSearchObject.Find(WSC.Cells(rowcluster, 4).Value, , xlValues, xlWhole, xlByColumns).Row 'найти второй объъеккт к которому привязывается куст
    For dat = LBound(DynArrayDate) To UBound(DynArrayDate) 'Для каждой даты
        If WSI.Cells(well, 4) < WSI.Cells(1, dat + 1) Or IsEmpty(WSI.Cells(1, dat + 1)) = True Then 'Приемистость проставляется с месяца в котором скважина запустилась под закачку
            Call Module2.injection_range_substitution(WSI, well, dat)
            If WSC.Cells(rowcluster, 5) < WSO.Cells(1, dat + 1) Or IsEmpty(WSO.Cells(1, dat + 1)) = True Then
                Call Module2.Check_Sum_by_object(WSI, WSO, WSS, WSCS, DynArraySource(), rangeToSearchDatAndSourceCon, rowobject_2, well, dat)
            ElseIf WSC.Cells(rowcluster, 3) < WSO.Cells(1, dat + 1) Or IsEmpty(WSO.Cells(1, dat + 1)) = True Then
                Call Module2.Check_Sum_by_object(WSI, WSO, WSS, WSCS, DynArraySource(), rangeToSearchDatAndSourceCon, rowobject_1, well, dat)
            End If
        End If
    Next
End Sub
